image: registry.gitlab.com/ignitionrobotics/web/images/cloudsim-pipelines

variables:
  PKG_NAME: gitlab.com/ignitionrobotics/web/cloudsim
  MYSQL_DATABASE: "cloudsim_test"
  MYSQL_ROOT_PASSWORD: "root"

#################################################################
# Before Script

before_script:
  - go version
  - cd /builds/ignitionrobotics/web/cloudsim
  - mkdir -p -v $GOPATH/src/$PKG_NAME/vendor
  - mv -f * $GOPATH/src/$PKG_NAME
  - cd $GOPATH/src/$PKG_NAME
  - $GOPATH/bin/dep ensure -vendor-only
  - $GOPATH/bin/dep status
  - git config --global user.name "ign-cloudsim"
  - git config --global user.email "ign-cloudsim@test.org"
  - mysql -u root -proot -h db -e "CREATE DATABASE usersdb_test"

#################################################################
# Cache configuration

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - ${GOPATH}/src/${PKG_NAME}/vendor

#################################################################
# Stages

stages:
  - installing
  - formatting
  - linting
  - testing
  - building
  - packaging
  - deploying

#################################################################
# Installing stage
proto:
  stage: installing
  before_script:
    - cd ./ign-transport/proto/
  script:
    - protoc --proto_path=. --go_out=. ignition/msgs/*.proto
  artifacts:
    paths:
      - /builds/ignitionrobotics/web/cloudsim/ign-transport/proto/ignition/msgs/*.go
    expire_in: 1 month

#################################################################
# Formatting stage

format:
  stage: formatting
  script:
    - go fmt $(go list ./... | grep -v /vendor/)

#################################################################
# Linting stage

lint:
  stage: linting
  script:
    - golint -set_exit_status $(go list ./... | grep -v /vendor/)
  allow_failure: true

#################################################################
# Testing stage

vet:
  stage: testing
  dependencies:
    - proto
  script:
    - go vet $(go list ./... | grep -v /vendor/)
  services:
    - mysql:5.7
  environment:
    name: testing

test:
  stage: testing
  dependencies:
    - proto
  script:
    - go test $(go list ./... | grep -v /vendor/)
  services:
    - mysql:5.7
  environment:
    name: testing

race:
  stage: testing
  dependencies:
    - proto
  script:
    - go test -race $(go list ./... | grep -v /vendor/)
  services:
    - mysql:5.7
  environment:
    name: testing

coverage:
  stage: testing
  dependencies:
    - proto
  script:
    - go test -covermode=atomic -coverprofile=coverage.tx
    - go tool cover -func=coverage.tx
    - bash <(curl -s https://codecov.io/bash)
  services:
    - mysql:5.7
  environment:
    name: testing

#################################################################
# Building stage

build:
  stage: building
  dependencies:
    - proto
  script:
    - go build
  artifacts:
    paths:
      - ${GOPATH}/src/${PKG_NAME}/cloudsim
    expire_in: 1 month


#################################################################
# Packaging stage

#package_default:
#  stage: packaging
#  image: docker
#  services:
#    - docker:dind
#  except:
#    - develop
#    - master
#  dependencies:
#    - build
#  variables:
#    DOCKER_HOST: tcp://docker:2375
#    DOCKER_DRIVER: overlay2
#  before_script:
#    - docker version
#    - docker info
#    - "docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY"
#  script:
#    - "docker pull $CI_REGISTRY_IMAGE:next || true"
#    - "docker build --cache-from $CI_REGISTRY_IMAGE:next --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA ."
#    - "docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA"
#
#package_next:
#  stage: packaging
#  image: docker
#  only:
#    - develop
#  services:
#    - docker:dind
#  dependencies:
#    - build
#  variables:
#    DOCKER_HOST: tcp://docker:2375
#    DOCKER_DRIVER: overlay2
#  before_script:
#    - docker version
#    - docker info
#    - "docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY"
#  script:
#    - "docker pull $CI_REGISTRY_IMAGE || true"
#    - "docker build --cache-from $CI_REGISTRY_IMAGE --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:next ."
#    - "docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA"
#    - "docker push $CI_REGISTRY_IMAGE:next"
#
#package_latest:
#  stage: packaging
#  image: docker
#  only:
#    - master
#  services:
#    - docker:dind
#  dependencies:
#    - build
#  variables:
#    DOCKER_HOST: tcp://docker:2375
#    DOCKER_DRIVER: overlay2
#  before_script:
#    - docker version
#    - docker info
#    - "docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY"
#  script:
#    - "docker pull $CI_REGISTRY_IMAGE || true"
#    - "docker build --cache-from $CI_REGISTRY_IMAGE --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:latest ."
#    - "docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA"
#    - "docker push $CI_REGISTRY_IMAGE:latest"
#  after_script:
#    - "docker logout ${CI_REGISTRY}"

#################################################################
# Deploying stage

integration:
  image: python:3.5
  stage: deploying
  dependencies:
    - build
  before_script:
    - apt-get update
    - apt-get install -y zip python-pip
    - pip install boto3==1.3.0
  script:
    - zip -r artifact.zip * .ebextensions -x bin/\* -x vendor/\*
    - python beanstalk_deploy.py
  environment:
    name: integration
    url: https://web-cloudsim-integration.us-east-1.elasticbeanstalk.com/1.0
  except:
    - master
    - develop
  when: manual

integration _1:
  image: python:3.5
  stage: deploying
  dependencies:
    - build
  before_script:
    - apt-get update
    - apt-get install -y zip python-pip
    - pip install boto3==1.3.0
  script:
    - zip -r artifact.zip * .ebextensions -x bin/\* -x vendor/\*
    - python beanstalk_deploy.py
  environment:
    name: integration
    url: https://web-cloudsim-integration-1.us-east-1.elasticbeanstalk.com/1.0
  except:
    - master
    - develop
  when: manual

staging:
  stage: deploying
  dependencies:
    - build
  before_script:
    - apt-get update
    - apt-get install -y zip python-pip
    - pip install boto3==1.3.0
  script:
    - zip -r artifact.zip * .ebextensions -x bin/\* -x vendor/\*
    - python beanstalk_deploy.py
  environment:
    name: staging
    url: https://web-cloudsim-staging.us-east-1.elasticbeanstalk.com/1.0
  only:
    - "/^release\\/.*$/"
    - develop
  when: manual

production:
  stage: deploying
  dependencies:
    - build
  before_script:
    - apt-get update
    - apt-get install -y zip python-pip
    - pip install boto3==1.3.0
  script:
    - zip -r artifact.zip * .ebextensions -x bin/\* -x vendor/\*
    - python beanstalk_deploy.py
  environment:
    name: production
    url: https://web-cloudsim-production.us-east-1.elasticbeanstalk.com/1.0
  only:
    - master
  when: manual
