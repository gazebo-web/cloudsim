image: registry.gitlab.com/ignitionrobotics/web/images/cloudsim-pipelines:1.1.0


variables:
  PKG_NAME: gitlab.com/ignitionrobotics/web/cloudsim
  MYSQL_DATABASE: "cloudsim_test"
  MYSQL_ROOT_PASSWORD: "root"
  KUBERNETES_POLL_TIMEOUT: 540

##########################################################
# Aliases

.setup_modules: &setup_modules
  - mkdir -p -v $GOPKGPATH

.download_modules: &download_modules
  - go mod download

.gitlab_credentials: &setup_git_credentials
  - git config --global user.name "ign-cloudsim"
  - git config --global user.email "ign-cloudsim@test.org"

.setup_db: &setup_db
  - mysql -u root -proot -h mysql -e "CREATE DATABASE usersdb_test"

.deploy_kubernetes: &deploy_kubernetes
  - export CONTAINER_IMAGE="$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA"
  - export APP_SELECTOR="$APPLICATION_NAME-primary"
  - export HEY_CMD="hey -z 15s -q 5 -c 2 http://$APPLICATION_NAME-canary.$APPLICATION_ENVIRONMENT.svc.cluster.local/healthz"
  - envsubst < "./deployments/00-namespace.yaml"
  - envsubst < "./deployments/00-namespace.yaml"  | kubectl apply -f -
  - envsubst < "./deployments/01-deployment.yaml"
  - envsubst < "./deployments/01-deployment.yaml" | kubectl apply -f -
  - envsubst < "./deployments/02-blue-green.yaml"
  - envsubst < "./deployments/02-blue-green.yaml" | kubectl apply -f -

##########################################################
# Cache configuration

.go-cache:
  variables:
    GOPATH: $CI_PROJECT_DIR/.go
    GOPKGPATH: $GOPATH/mod/pkg
  before_script:
    - *setup_modules
  cache:
    paths:
      - $GOPKGPATH/

##########################################################
# Stages

stages:
  - install
  - format
#  - test
  - package
#  - deploy

##########################################################
# Installing stage

proto:
  stage: install
  before_script:
    - cd ./ign-transport/proto/
  script:
    - protoc --proto_path=. --go_out=. ignition/msgs/*.proto
  artifacts:
    paths:
      - /builds/ignitionrobotics/web/cloudsim/ign-transport/proto/ignition/msgs/*.go
    expire_in: 1 month
  tags:
    - gitlab-org

dependencies:
  stage: install
  extends: .go-cache
  script:
    - *download_modules
    - ls $GOPKGPATH
  tags:
    - gitlab-org

##########################################################
# Formatting stage

fmt:
  stage: format
  extends: .go-cache
  before_script:
    - *setup_git_credentials
  script:
    - go fmt $(go list ./...)
  tags:
    - gitlab-org

lint:
  stage: format
  extends: .go-cache
  before_script:
    - *setup_git_credentials
  script:
    - golint -set_exit_status $(go list ./...)
  tags:
    - gitlab-org

###########################################################
## Testing stage

#vet:
#  stage: test
#  dependencies:
#    - proto
#  before_script:
#    - *setup_modules
#    - *setup_project
#    - *setup_git_credentials
#    - *setup_db
#  script:
#    - go vet $(go list ./...)
#  services:
#    - mysql:5.7
#  environment:
#    name: testing
#  tags:
#    - gitlab-org
#
#test:
#  stage: test
#  extends: .go-cache
#  dependencies:
#    - proto
#  before_script:
#    - *setup_git_credentials
#    - *setup_db
#  script:
#    - go test $(go list ./...)
#  services:
#    - mysql:5.7
#  environment:
#    name: testing
#  tags:
#    - gitlab-org
#
#race:
#  stage: test
#  dependencies:
#    - proto
#  before_script:
#    - *setup_modules
#    - *setup_project
#    - *setup_git_credentials
#    - *setup_db
#  script:
#    - go test -race $(go list ./...)
#  services:
#    - mysql:5.7
#  environment:
#    name: testing
#  allow_failure: true
#  tags:
#    - gitlab-org
#
#coverage:
#  stage: test
#  dependencies:
#    - proto
#  before_script:
#    - *setup_modules
#    - *setup_project
#    - *setup_git_credentials
#    - *setup_db
#  script:
#    - go test -covermode=atomic -coverprofile=coverage.tx
#    - go tool cover -func=coverage.tx
#    - bash <(curl -s https://codecov.io/bash)
#  services:
#    - mysql:5.7
#  environment:
#    name: testing
#  tags:
#    - gitlab-org

###########################################################
## Packaging stage

.docker:
  stage: package
  image: docker
  services:
    - docker:dind
  dependencies:
    - proto
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
  before_script:
    - docker version
    - docker info
    - "docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY"
  after_script:
    - "docker logout ${CI_REGISTRY}"
  tags:
    - docker

docker:
  stage: package
  extends: .docker
  except:
    - develop
    - master
  script:
    - "docker pull $CI_REGISTRY_IMAGE:next || true"
    - "docker build --cache-from $CI_REGISTRY_IMAGE:next --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA ."
    - "docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA"

docker:next:
  stage: package
  extends: .docker
  only:
    - develop
  script:
    - "docker pull $CI_REGISTRY_IMAGE || true"
    - "docker build --cache-from $CI_REGISTRY_IMAGE --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:next ."
    - "docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA"
    - "docker push $CI_REGISTRY_IMAGE:next"

docker:latest:
  stage: package
  extends: .docker
  only:
    - master
  script:
    - "docker pull $CI_REGISTRY_IMAGE || true"
    - "docker build --cache-from $CI_REGISTRY_IMAGE --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:latest ."
    - "docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA"
    - "docker push $CI_REGISTRY_IMAGE:latest"

###########################################################
## Deploying stage
#
#integration:
#  image: registry.gitlab.com/ignitionrobotics/web/images/kubectl:latest
#  stage: deploy
#  dependencies:
#    - docker
#  script:
#    - *deploy_kubernetes
#  tags:
#    - testing
#    - kubernetes
#  environment:
#    name: integration
#  except:
#    - master
#    - develop
#  when: manual
#
#integration_1:
#  image: registry.gitlab.com/ignitionrobotics/web/images/kubectl:latest
#  stage: deploy
#  dependencies:
#    - docker
#  script:
#    - *deploy_kubernetes
#  tags:
#    - testing
#    - kubernetes
#  environment:
#    name: integration-1
#  except:
#    - master
#    - develop
#  when: manual
#
#staging:
#  image: registry.gitlab.com/ignitionrobotics/web/images/kubectl:latest
#  stage: deploy
#  dependencies:
#    - docker:next
#  script:
#    - *deploy_kubernetes
#  tags:
#    - testing
#    - kubernetes
#  environment:
#    name: staging
#  only:
#    - develop
#  when: manual
#
#production:
#  image: registry.gitlab.com/ignitionrobotics/web/images/kubectl:latest
#  stage: deploy
#  dependencies:
#    - docker:latest
#  script:
#    - *deploy_kubernetes
#  tags:
#    - kubernetes
#    - production
#  environment:
#    name: production
#  only:
#    - master
#  when: manual
